name: Deploy to production server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Connect to server and run scripts
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.VDS_IP }}
          username: user1
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/user1/py_projects/${{ vars.FOLDER_AND_SERVICE_NAME }}

            # Pull the latest code
            git pull

            # Activate the virtual environment (adjust the path if needed)
            source /home/user1/py_projects/${{ vars.FOLDER_AND_SERVICE_NAME }}/venv/bin/activate

            # Install dependencies
            pip install -r requirements.txt

            # Restart the service
            sudo systemctl restart ${{ vars.FOLDER_AND_SERVICE_NAME }}.service


            { git pull 2>&1 > /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-success.txt || echo "Git pull failed" > /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-error.txt; }

            if [ -s /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-error.txt ]; then
              error_message=$(cat /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-error.txt)
              max_length=4096

              # Send initial message
              curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                -d chat_id=${{ vars.TELEGRAM_CHAT_ID }} \
                -d text="Deployment ${{ vars.FOLDER_AND_SERVICE_NAME }} failed with the following error"

              # Send error message in chunks
              while [ -n "$error_message" ]; do
                chunk="${error_message:0:max_length}"
                curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                  -d chat_id=${{ vars.TELEGRAM_CHAT_ID }} \
                  -d text="$chunk"
                error_message="${error_message:max_length}"
              done
            fi

            if [ -s /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-success.txt ]; then
              sudo systemctl restart ${{ vars.FOLDER_AND_SERVICE_NAME }}.service
              success_message=$(cat /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-success.txt)
              max_length=4096
              while [ -n "$success_message" ]; do
                chunk="${success_message:0:max_length}"
                curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
                  -d chat_id=${{ vars.TELEGRAM_CHAT_ID }} \
                  -d text="$chunk"
                success_message="${success_message:max_length}"
              done
            fi
            rm -f /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-success.txt /home/user1/tmp-git-pull-${{ vars.FOLDER_AND_SERVICE_NAME }}-error.txt
